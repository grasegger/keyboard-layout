/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/*
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
 * │ ^ │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ ß │ ´ │     │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
 * │     │ Q │ W │ E │ R │ T │ Z │ U │ I │ O │ P │ Ü │ + │   │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
 * │      │ A │ S │ D │ F │ G │ H │ J │ K │ L │ Ö │ Ä │ # │  │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
 * │    │ < │ Y │ X │ C │ V │ B │ N │ M │ , │ . │ - │        │
 * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
 * │     │    │     │                       │     │    │     │
 * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
 */
// Row 1
#define DE_CIRC GRAVE // ^ (dead)
#define DE_SS   MINUS // ß
#define DE_ACUT EQUAL // ´ (dead)

// Row 2
#define DE_Q    Q            // Q
#define DE_W    W            // W
#define DE_E    E            // E
#define DE_R    R            // R
#define DE_T    T            // T
#define DE_Z    Y            // Z
#define DE_U    U            // U
#define DE_I    I            // I
#define DE_O    O            // O
#define DE_P    P            // P
#define DE_UDIA LEFT_BRACKET // Ü
#define DE_PLUS RIGHT_BRACKET // +

// Row 3
#define DE_A    A            // A
#define DE_S    S            // S
#define DE_D    D            // D
#define DE_F    F            // F
#define DE_G    G            // G
#define DE_H    H            // H
#define DE_J    J            // J
#define DE_K    K            // K
#define DE_L    L            // L
#define DE_ODIA SEMICOLON    // Ö
#define DE_ADIA SINGLE_QUOTE // Ä
#define DE_HASH NON_US_HASH  // #

// Row 4
#define DE_LABK NON_US_BACKSLASH // <
#define DE_Y    Z                // Y
#define DE_X    X                // X
#define DE_C    C                // C
#define DE_V    V                // V
#define DE_B    B                // B
#define DE_N    N                // N
#define DE_M    M                // M
#define DE_COMM COMMA            // ,
#define DE_DOT  PERIOD           // .
#define DE_MINS SLASH            // -

/* Shifted symbols
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
 * │ ° │ ! │ " │ § │ $ │ % │ & │ / │ ( │ ) │ = │ ? │ ` │     │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
 * │     │   │   │   │   │   │   │   │   │   │   │   │ * │   │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
 * │      │   │   │   │   │   │   │   │   │   │   │   │ ' │  │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
 * │    │ > │   │   │   │   │   │   │   │ ; │ : │ _ │        │
 * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
 * │     │    │     │                       │     │    │     │
 * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
 */
// Row 1
#define DE_DEG  LS(DE_CIRC) // °
#define DE_EXLM LS(NUMBER_1)    // !
#define DE_DQUO LS(NUMBER_2)    // "
#define DE_SECT LS(NUMBER_3)    // §
#define DE_DLR  LS(NUMBER_4)    // $
#define DE_PERC LS(NUMBER_5)    // %
#define DE_AMPR LS(NUMBER_6)    // &
#define DE_SLSH LS(NUMBER_7)    // /
#define DE_LPRN LS(NUMBER_8)    // (
#define DE_RPRN LS(NUMBER_9)    // )
#define DE_EQL  LS(NUMBER_0)    // =
#define DE_QUES LS(DE_SS)   // ?
#define DE_GRV  LS(DE_ACUT) // ` (dead)
// Row 2
#define DE_ASTR LS(DE_PLUS) // *
// Row 3
#define DE_QUOT LS(DE_HASH) // '
// Row 4
#define DE_RABK LS(DE_LABK) // >
#define DE_SCLN LS(DE_COMM) // ;
#define DE_COLN LS(DE_DOT)  // :
#define DE_UNDS LS(DE_MINS) // _

/* Alted symbols
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
 * │ „ │ ¡ │ “ │ ¶ │ ¢ │ [ │ ] │ | │ { │ } │ ≠ │ ¿ │   │     │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
 * │     │ « │ ∑ │ € │ ® │ † │ Ω │ ¨ │ ⁄ │ Ø │ π │ • │ ± │   │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
 * │      │ Å │ ‚ │ ∂ │ ƒ │ © │ ª │ º │ ∆ │ @ │ Œ │ Æ │ ‘ │  │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
 * │    │ ≤ │ ¥ │ ≈ │ Ç │ √ │ ∫ │ ~ │ µ │ ∞ │ … │ – │        │
 * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
 * │     │    │     │                       │     │    │     │
 * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
 */
// Row 1
#define DE_LBRC LA(NUMBER_5)    // [
#define DE_RBRC LA(NUMBER_6)    // ]
#define DE_PIPE LA(NUMBER_7)    // |
#define DE_LCBR LA(NUMBER_8)    // {
#define DE_RCBR LA(NUMBER_9)    // }
#define DE_AT LA(DE_L)    // @
#define DE_EURO LA(DE_E)    // €
#define DE_TILD LA(DE_N)    // ~

/* Shift+Alted symbols
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
 * │   │ ¬ │ ” │   │ £ │ ﬁ │   │ \ │ ˜ │ · │ ¯ │ ˙ │ ˚ │     │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
 * │     │ » │   │ ‰ │ ¸ │ ˝ │ ˇ │ Á │ Û │   │ ∏ │   │  │   │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
 * │      │   │ Í │ ™ │ Ï │ Ì │ Ó │ ı │   │ ﬂ │   │   │   │  │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
 * │    │ ≥ │ ‡ │ Ù │   │ ◊ │ ‹ │ › │ ˘ │ ˛ │ ÷ │ — │        │
 * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
 * │     │    │     │                       │     │    │     │
 * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
 */
// Row 1
#define DE_BSLS LS(LA(NUMBER_7))    // (backslash)

#define DEFAULT 0
#define ALPHA_2 1
#define SYM_ONE 2
#define SYM_TWO 3
#define NUM_ONE 4
#define FUN_ONE 5

#define HOLD_TAP_TIME 50

/ {
    behaviors {

        mtl: mtl {
            compatible = "zmk,behavior-hold-tap";
            label = "Mod Tap Left";
            #binding-cells = <2>;
            tapping-term-ms = <HOLD_TAP_TIME>;
            quick_tap_ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 33 34 35 36 37 38 39 46 47 48 49>;
        };

        mtr: mtr {
            compatible = "zmk,behavior-hold-tap";
            label = "Mod Tap Left";
            #binding-cells = <2>;
            tapping-term-ms = <HOLD_TAP_TIME>;
            quick_tap_ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 30 31 32 40 41 42 43 44 45>;
        };

    };
};

#define _____ &none

#define HYPER LC(LG(LS(LALT)))

/*
            _____ _____ K1  K2    K3          _____                                     _____ K4          K5      K6  _____ _____ 
            _____ K7    K8  K9    K10         _____                                     _____ K11         K12     K13 K14   _____ 
            _____ K15   K16 K17   K18         _____ _____       _____ _____ _____       _____ K19         K20     K21 K22   _____ 
                            _____ &to NUM_ONE K1  &sl SYM_ONE SYM_ONE _____ _____ &sl SYM_TWO SYM_TWO K2   &sl FUN_ONE FUN_ONE _____


            _____ _____ K1  K2    K3  _____                                     _____ K4 K5 K6  _____ _____ 
            _____ K7    K8  K9    K10 _____                                     _____ K11 K12 K13 K14 _____ 
            _____ _____ _____ _____   _____         _____ _____       _____ _____ _____ _____ _____ _____ _____ _____ _____ 
                            _____ &to NUM_ONE &to DEFAULT  &sl SYM_ONE  _____ _____ &sl SYM_TWO  K2   &sl  FUN_ONE _____

*/
/ {

    keymap {
        compatible = "zmk,keymap";

/*
        test {
            bindings = <
            _____ &kp A &kp B &kp C &kp D _____                            _____  &kp E  &kp F &kp G &kp H _____ \
            _____ &kp I &kp J &kp K &kp L _____                            _____  &kp M  &kp N &kp O &kp P _____ \
            _____ &kp Q &kp R &kp S &kp T _____ _____   _____ _____ _____  _____  &kp U  &kp V &kp W &kp X _____ \
                              _____ &kp Y &kp Z  &kp N1 _____ _____ &kp N2 &kp N3 &kp N4 _____
            >;
        };
*/
        alpha_one {
            bindings = <
                _____ _____    &kp DE_L &kp DE_U    &kp DE_A        _____                               _____       &kp DE_B      &kp DE_D &kp DE_G  _____      _____
                _____ &kp DE_C &kp DE_R &kp DE_I    &kp DE_E        _____                               _____       &kp DE_N      &kp DE_T &kp DE_S  &kp DE_H   _____
                _____ &kp LEFT &kp DOWN &kp UP      &kp RIGHT       _____       _____ _____ _____ _____ _____       &kp BACKSPACE &kp TAB  &kp ENTER &kp ESCAPE _____
                               _____    &to NUM_ONE &mt HYPER SPACE &sl SYM_ONE _____ _____ &sl SYM_TWO &sl ALPHA_2 &sl FUN_ONE   _____
            >;
        };


        alpha_two {
            bindings = <
                _____ _____    &kp DE_DOT &kp DE_COMM &kp DE_J    _____                                           _____       &kp DE_W    &kp DE_Y    &kp DE_Q    _____     _____
                _____ &kp DE_V &kp DE_X   &kp DE_Z    &kp DE_O    _____                                           _____       &kp DE_M    &kp DE_P    &kp DE_F    &kp DE_K  _____
                _____ &kp HOME &kp PG_DN  &kp PG_UP   &kp END     _____       _____ _____ _____       _____       _____       &kp DE_ADIA &kp DE_ODIA &kp DE_UDIA &kp DE_SS _____
                               _____      &to NUM_ONE &to DEFAULT &sl SYM_ONE _____ _____ &sl SYM_TWO &to ALPHA_2 &sl FUN_ONE _____
      
            >;
        };

       sym_one {
            bindings = <
                _____ _____        &kp DE_SCLN &kp DE_DQUO &kp DE_QUOT _____                                           _____       &kp DE_EXLM &kp DE_QUES &kp DE_COLN _____       _____ 
                _____  &kp DE_LABK &kp DE_LBRC &kp DE_LCBR &kp DE_LPRN _____                                           _____       &kp DE_RPRN &kp DE_RCBR &kp DE_RBRC &kp DE_RABK _____ 
                _____ _____        _____       _____       _____       _____       _____ _____ _____       _____       _____       _____       _____       _____       _____       _____ 
                                   _____       &to NUM_ONE &kp DE_DLR  &sl SYM_ONE _____ _____ &sl SYM_TWO &kp DE_MINS &sl FUN_ONE _____
            >;
        };

       sym_two {
            bindings = <
                _____ _____        &kp DE_TILD &kp DE_PIPE &kp DE_HASH _____                                           _____       &kp DE_ACUT &kp DE_DEG  &kp DE_CIRC _____      _____ 
                _____  &kp DE_EURO &kp DE_BSLS &kp DE_SLSH &kp DE_ASTR _____                                           _____       &kp DE_PERC &kp DE_AMPR &kp DE_EQL  &kp DE_GRV _____ 
                _____ _____        _____       _____       _____       _____       _____ _____ _____       _____       _____       _____       _____       _____       _____      _____ 
                                   _____       &to NUM_ONE &kp DE_UNDS &sl SYM_ONE _____ _____ &sl SYM_TWO &kp DE_PLUS &sl FUN_ONE _____
            >;
        };

       num_one {
            bindings = <
                _____ _____             &kp C_AL_CALC     &kp ENTER         &kp DE_EQL       _____                                     _____       &kp N7 &kp N8 &kp N9 _____  _____ 
                _____  &mt LALT DE_SLSH &mt LCTRL DE_ASTR &mt LSHFT DE_MINS &mt LGUI DE_PLUS _____                                     _____       &kp N4 &kp N5 &kp N6 &kp N0 _____ 
                _____ _____             &kp DE_COMMA      &kp DE_DOT        &kp BACKSPACE    _____       _____ _____ _____       _____ _____       &kp N1 &kp N2 &kp N3 _____  _____ 
                                        _____             &to NUM_ONE       &to DEFAULT      &sl SYM_ONE _____ _____ &sl SYM_TWO _____ &sl FUN_ONE _____
            >;
        };

        fun_one {
            bindings = <
            
            
                _____ _____           &ext_power EP_TOG &kp C_MUTE          &kp C_PLAY_PAUSE _____                                       _____       &kp F7 &kp F8 &kp F9 _____   _____ 
                _____ &mt LALT C_PREV &mt LCTRL C_NEXT  &mt LSHFT C_VOL_DN &mt LGUI C_VOL_UP _____                                       _____       &kp F4 &kp F5 &kp F6 &kp F10 _____ 
                _____ &bt BT_SEL 0    &bt BT_CLR        &kp C_BRI_UP       &kp C_BRI_DEC     _____       _____ _____ _____       _____   _____       &kp F1 &kp F2 &kp F3 &kp F11 _____ 
                                      _____             &to NUM_ONE        &to DEFAULT       &sl SYM_ONE _____ _____ &sl SYM_TWO &kp F12 &sl FUN_ONE _____
            
            >;
        };

    };
};